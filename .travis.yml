language: minimal
os: linux
dist: xenial

addons:
  apt:
    sources:
    - sourceline: 'ppa:ondrej/nginx'
    - sourceline: 'ppa:mhier/libboost-latest'
    packages:
    - libssl-dev
    - libboost1.70-dev
    - libgl1-mesa-dev
    - libxkbcommon-x11-0
    - libegl1-mesa

# Force set QT version
#env:
#- QT_VERSION=5.13

install:
- cd /tmp
# E.g QT_VERSION=5.13
- |
  [ -z "${QT_VERSION}" ] && \
      QT_VERSION="$(curl -s --compressed https://download.qt.io/archive/qt/ | grep /icons/folder.gif | head -n1 | sed -r 's@.*<a href="([^/]+)/">.*@\1@')"
# E.g 5.13.2
- QT_SUBVERSION="$(curl -s --compressed "https://download.qt.io/archive/qt/${QT_VERSION}/" | grep /icons/folder.gif | head -n1 | sed -r 's@.*<a href="([^/]+)/">.*@\1@')"
# E.g 5
- QT_MAJOR="$(echo "${QT_VERSION}" | cut -d. -f1)"
- QT_EXTRACT_PATH="${HOME}/Qt"
- curl --compressed -LOC- "https://download.qt.io/archive/qt/${QT_VERSION}/${QT_SUBVERSION}/qt-opensource-linux-x64-${QT_SUBVERSION}.run"
- |
  curl --compressed -sLkf https://raw.githubusercontent.com/benlau/qtci/master/bin/extract-qt-installer | \
      QT_CI_PACKAGES="qt.qt${QT_MAJOR}.$(echo "${QT_SUBVERSION}" | tr -d '.').gcc_64" bash -s "qt-opensource-linux-x64-${QT_SUBVERSION}.run" "${QT_EXTRACT_PATH}"
- QT_BASE_DIR="${QT_EXTRACT_PATH}/${QT_SUBVERSION}/gcc_64"
- export PATH="${QT_BASE_DIR}/bin:${PATH}"
- export LD_LIBRARY_PATH="${QT_BASE_DIR}/lib:${LD_LIBRARY_PATH}"
- export PKG_CONFIG_PATH="${QT_BASE_DIR}/lib/pkgconfig:${PKG_CONFIG_PATH}"

script:
- |
  [ -f /tmp/libtorrent-rasterbar-1.1.13/.unpack_ok ] || \
      curl -L https://github.com/arvidn/libtorrent/releases/download/libtorrent-1_1_13/libtorrent-rasterbar-1.1.13.tar.gz | \
      tar -zxf - -C /tmp
- touch "/tmp/libtorrent-rasterbar-1.1.13/.unpack_ok"
- cd "/tmp/libtorrent-rasterbar-1.1.13/"
- CXXFLAGS="-std=c++11" CPPFLAGS="-std=c++11" ./configure --prefix=/usr --with-boost-libdir="/usr/lib" --disable-debug --disable-dependency-tracking --disable-silent-rules --disable-maintainer-mode --with-libiconv
- make clean
- make -j$(nproc) V=0
- sudo make uninstall
- sudo make install
- cd "${TRAVIS_BUILD_DIR}"
- CXXFLAGS="-std=c++11" CPPFLAGS="-std=c++11" ./configure --prefix=/tmp/qbee/AppDir/usr --with-boost-libdir="/usr/lib" || (cat config.log && exit 1)
- make install -j$(nproc)
- '[ -x "/tmp/linuxdeploy-x86_64.AppImage" ] || curl -LC- -o /tmp/linuxdeploy-x86_64.AppImage "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"'
- '[ -x "/tmp/linuxdeploy-plugin-qt-x86_64.AppImage" ] || curl -LC- -o /tmp/linuxdeploy-plugin-qt-x86_64.AppImage https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage'
- chmod +x '/tmp/linuxdeploy-x86_64.AppImage' '/tmp/linuxdeploy-plugin-qt-x86_64.AppImage'
- cd "/tmp/qbee"
- mkdir -p "/tmp/qbee/AppDir/apprun-hooks/"
- echo 'export XDG_DATA_DIRS="${APPDIR:-"$(dirname "${BASH_SOURCE[0]}")/.."}/usr/share:${XDG_DATA_DIRS}:/usr/share:/usr/local/share"' > "/tmp/qbee/AppDir/apprun-hooks/xdg_data_dirs.sh"
- UPDATE_INFORMATION="zsync|https://github.com/${TRAVIS_REPO_SLUG}/releases/latest/download/qBittorrent-Enhanced-Edition.AppImage.zsync" OUTPUT='qBittorrent-Enhanced-Edition.AppImage' /tmp/linuxdeploy-x86_64.AppImage --appdir="/tmp/qbee/AppDir" --output=appimage --plugin qt

deploy:
  provider: releases
  overwrite: true
  api_key: "${GITHUB_TOKEN}"
  file:
  - qBittorrent-Enhanced-Edition.AppImage
  - qBittorrent-Enhanced-Edition.AppImage.zsync
  on:
    all_branches: true
    tags: true
